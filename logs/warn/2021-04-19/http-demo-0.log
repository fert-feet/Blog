2021-04-19 00:00:34.870 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m5s487ms318Âµs200ns).
2021-04-19 00:06:59.876 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:10:44.012 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:15:36.029 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:15:37.279 [restartedMain] WARN  o.h.t.schema.internal.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table t_api_roles add constraint FKbqneojixyrr7mmueutl4hnoc2 foreign key (roles_id) references t_role (id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table t_api_roles add constraint FKbqneojixyrr7mmueutl4hnoc2 foreign key (roles_id) references t_role (id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1234)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:259)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:233)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:450)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:199)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:159)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:769)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1313)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at com.ling.LingApplication.main(LingApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`jpa_blog`.`#sql-16a4_762`, CONSTRAINT `FKbqneojixyrr7mmueutl4hnoc2` FOREIGN KEY (`roles_id`) REFERENCES `t_role` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:762)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:646)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 152 common frames omitted
2021-04-19 00:16:31.957 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:16:33.239 [restartedMain] WARN  o.h.t.schema.internal.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table t_api_roles add constraint FKbqneojixyrr7mmueutl4hnoc2 foreign key (roles_id) references t_role (id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table t_api_roles add constraint FKbqneojixyrr7mmueutl4hnoc2 foreign key (roles_id) references t_role (id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1234)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:259)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:233)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:450)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:199)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:159)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:769)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1313)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1302)
	at com.ling.LingApplication.main(LingApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`jpa_blog`.`#sql-16a4_76c`, CONSTRAINT `FKbqneojixyrr7mmueutl4hnoc2` FOREIGN KEY (`roles_id`) REFERENCES `t_role` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:762)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:646)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 152 common frames omitted
2021-04-19 00:17:26.588 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:20:22.292 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:22:21.742 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=48s292ms905Âµs100ns).
2021-04-19 00:31:36.762 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:33:35.209 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=56s484ms247Âµs).
2021-04-19 00:33:54.786 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:36:27.503 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=54s113ms228Âµs200ns).
2021-04-19 00:36:33.803 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:37:45.486 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:38:43.421 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:41:18.700 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:41:45.305 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:43:32.229 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:43:42.062 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:44:11.048 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 00:44:59.734 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 12:35:22.035 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 20:22:15.715 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 21:47:06.688 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 21:49:32.448 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-04-19 21:49:40.699 [http-nio-8090-exec-2] WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.User["roles"]->org.hibernate.collection.internal.PersistentBag[0]->com.ling.pojo.Role["users"])]
2021-04-19 21:56:19.837 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
